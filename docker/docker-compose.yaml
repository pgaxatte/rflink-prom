version: '3'

services:
  rflink-prom:
    container_name: rflink-prom
    build: ..
    ports:
      - 8080:8080
    volumes:
      - ../mapping.yaml.example:/app/mapping.yaml:ro
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    command:
      - '-v'
      - '-namemap'
      - '/app/mapping.yaml'
    restart: always

  prometheus:
    image: prom/prometheus:v2.21.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-admin-api'
    ports:
      - 9090:9090
    restart: always

#  node-exporter:
#    image: prom/node-exporter
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command: 
#      - '--path.procfs=/host/proc' 
#      - '--path.sysfs=/host/sys'
#      - '--collector.filesystem.ignored-mount-points'
#      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
#    ports:
#      - 9100:9100
#    restart: always

  grafana:
    image: grafana/grafana:7.2.0
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      GF_SECURITY_ADMIN_PASSWORD: foobar
      GF_USERS_ALLOW_SIGN_UP: "false"
    restart: always

volumes:
  prometheus_data: {}
  grafana_data: {}
